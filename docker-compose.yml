version: '3'
services:
  webapp:
    env_file:
      - ./.env
    volumes:
      - ./webapp:/src
      - staticfiles:/src/static
      - mediafiles:/src/media
    build:
      context: ./webapp
      dockerfile: ./Dockerfile
    image: webapp-dev-image
    container_name: webapp-dev-container
    restart: always
    command: >
      bash -c "python ./manage.py makemigrations --noinput &&
               python ./manage.py migrate --noinput &&
               python ./manage.py collectstatic --noinput &&
               python ./manage.py runserver 0.0.0.0:8888"
    depends_on:
      - db
  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    image: nginx-dev-image
    container_name: nginx-dev-container
    ports:
      - 8888:80
    depends_on:
      - webapp
      - db
    links:
      - webapp
    entrypoint:
      - /docker-entrypoint.sh
    volumes:
      - staticfiles:/static
      - mediafiles:/media
      - ./log:/var/log/nginx
  db:
    image: postgres
    expose:
      - "${POSTGRES_PORT}"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./db/initial_setup.sql:/docker-entrypoint-initdb.d/initial_setup.sql
      - postgres_data:/var/lib/postgresql/data/
    command: -p ${POSTGRES_PORT}

volumes:
  postgres_data:
  staticfiles:
  mediafiles: